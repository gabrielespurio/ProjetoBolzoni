Voc√™ √© um desenvolvedor s√™nior fullstack especialista em sistemas de gest√£o empresarial e infraestrutura em nuvem.  
Sua tarefa √© desenvolver um sistema web completo chamado **Sistema Bolzoni**, desenvolvido pela empresa **HAVR Tecnologia** para a **Bolzoni Produ√ß√µes**, empresa especializada em recrea√ß√£o infantil e personagens para eventos.

---

## üéØ OBJETIVO DO SISTEMA
Desenvolver uma plataforma completa para centralizar a gest√£o administrativa e operacional da Bolzoni Produ√ß√µes, com controle de:
- Finan√ßas (contas, fluxo de caixa e contratos)
- Estoque (materiais e personagens)
- Clientes
- Funcion√°rios
- Compras
- Eventos

O sistema deve ser seguro, escal√°vel e otimizado para rodar em **servidores da Contabo (Ubuntu 22.04 LTS)**.

---

## ‚öôÔ∏è STACK TECNOL√ìGICA
- **Frontend:** React + Vite + TypeScript + TailwindCSS
- **Backend:** Node.js + Express + TypeScript
- **Banco de Dados:** PostgreSQL (usando Prisma ORM)
- **Autentica√ß√£o:** JWT (login de administrador e funcion√°rios)
- **Relat√≥rios:** PDFKit ou jsPDF para gera√ß√£o de relat√≥rios
- **Infraestrutura de Deploy:** Servidor VPS da **Contabo**
- **Builds:** 
  - Frontend via `vite build`
  - Backend empacotado via `esbuild`
- **Ambiente:** Projeto monorepo (`/frontend` e `/backend`)

---

## üß© M√ìDULOS E FUNCIONALIDADES

### 1. M√≥dulo Financeiro
- Controle de contas a pagar e a receber.
- Registro de lan√ßamentos manuais.
- Fluxo de caixa consolidado (com filtros por per√≠odo).
- Integra√ß√£o com contratos de eventos (financeiro vinculado a cada evento).
- Relat√≥rios export√°veis (PDF e Excel).

### 2. M√≥dulo de Estoque
- Controle de produtos consum√≠veis (bal√µes, tintas, fantasias, etc.).
- Controle de personagens (Homem-Aranha, Frozen, Mickey etc.) com disponibilidade por data.
- Registro de entradas e sa√≠das.
- Relat√≥rios de consumo por evento.

### 3. M√≥dulo de Clientes
- Cadastro de clientes com dados b√°sicos (nome, telefone, e-mail, cidade, observa√ß√µes).
- Hist√≥rico de eventos realizados.
- Busca e filtro de clientes.

### 4. M√≥dulo de Funcion√°rios
- Cadastro de funcion√°rios com fun√ß√£o e contato.
- Hist√≥rico de participa√ß√£o em eventos.
- Gest√£o de disponibilidade.

### 5. M√≥dulo de Compras
- Registro de compras (produtos e servi√ßos).
- Associa√ß√£o autom√°tica ao estoque.
- Relat√≥rios de gastos por fornecedor e per√≠odo.

### 6. M√≥dulo de Gest√£o de Eventos
- Cadastro de eventos com:
  - Cliente associado
  - Data, hora e local
  - Personagens e funcion√°rios alocados
  - Valor total do contrato
- Status do evento: **Agendado, Conclu√≠do, Cancelado**
- Relat√≥rios de eventos por per√≠odo, tipo e cliente.

---

## üìä DASHBOARD E RELAT√ìRIOS
O sistema deve conter um **Dashboard principal** com:
- Pr√≥ximos eventos
- Saldo de caixa
- Faturamento mensal
- Consumo de estoque
- Indicadores visuais (gr√°ficos e m√©tricas)

Relat√≥rios export√°veis (PDF e CSV):
- Financeiro
- Estoque
- Eventos
- Funcion√°rios

---

## üîí AUTENTICA√á√ÉO E PERMISS√ïES
- Login com JWT.
- Perfis:
  - **Administrador:** acesso total.
  - **Funcion√°rio:** acesso restrito (eventos e estoque).
- Prote√ß√£o de rotas no frontend.
- Middleware de autentica√ß√£o no backend.

---

## üé® INTERFACE
- Layout administrativo moderno (sidebar fixa + header superior).
- Painel de controle com visual tipo dashboard.
- Paleta com tons profissionais (ex: azul, cinza e branco).
- Totalmente responsivo (mobile e tablet).

---

## üßæ ESTRUTURA DO PROJETO (SUGEST√ÉO)
